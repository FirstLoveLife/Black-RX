#+TITLE: config
** Meta
     If you place the following code into your emacs init when saving the
     ~/.dotfiles.org file the dotfiles will all be exported.

#+BEGIN_SRC emacs-lisp :tangle no
       (defun dotfiles-hook ()
         "If the current buffer is '~/.dotfiles.org' the code-blocks are
       tangled."
         (when (equal (buffer-file-name)
                      (expand-file-name (concat (getenv "HOME")
                                        "/.dotfiles.org")))
           (org-babel-tangle)))

       (add-hook 'after-save-hook 'dotfiles-hook)
     #+END_SRC

    
    
** bashrc
#+BEGIN_SRC conf :tangle ~/.bashrc
#+END_SRC

** tmux
#+BEGIN_SRC conf :tangle ~/.tmux.conf
#+END_SRC
** gitconfig
#+BEGIN_SRC conf :tangle ~/.gitconfig
[user]
	name = chenli
	email = czxyl@protonmail.com
	username = chenli
[core]
	editor = emacs
	whitespace = fix,-indent-with-non-tab,trailing-space,cr-at-eol
	excludesfile = ~/.gitignore
#+END_SRC
** gitignore
#+BEGIN_SRC conf :tangle ~/.gitignore
# Compiled source #
###################
*.com
*.class
*.dll
*.exe
*.o
*.so

# Temporary files #
###################
*.swp
*.swo
*~

# Packages #
############
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip

# Logs #
######################
*.log

# OS generated files #
######################
.DS_Store*
ehthumbs.db
Icon?
Thumbs.db

*.lock
#+END_SRC
** xonsh
#+BEGIN_SRC python :tangle ~/.xonshrc
aliases["p"]='proxychains'
$PATH.append('~/.emacs.d/bin')
#+END_SRC
** rime
some useful posts:
- https://gist.github.com/merrickluo/553f39c131d0eb717cd59f72c9d4b60d
- https://github.com/rime/home/wiki/UserGuide#%E5%90%8C%E6%AD%A5%E7%94%A8%E6%88%B6%E8%B3%87%E6%96%99
- https://manateelazycat.github.io/emacs/2019/09/12/make-rime-works-with-linux.html

#+BEGIN_SRC conf :tangle ~/.emacs.d/rime/default.custom.yaml
patch:
  menu:
    page_size: 100
  schema_list:
    - schema: luna_pinyin_simp
#+END_SRC
** xmoad
#+BEGIN_SRC conf :tangle ~/.xmonad/xmonad.hs
import qualified XMonad.StackSet as W
import XMonad.Actions.UpdateFocus
import XMonad.Util.EZConfig
import XMonad

main = do
  xmonad $ defaultConfig
    { terminal    = myTerminal
    , modMask     = myModMask
    , focusFollowsMouse = False
    } `additionalKeysP` myKeys

myTerminal    = "deepin-terminal"
myModMask     = mod4Mask -- Win key or Super_L
myBorderWidth = 5

myKeys =
    [
    -- other additional keys
    ]
    ++
    [ (mask ++ "M-" ++ [key], screenWorkspace scr >>= flip whenJust (windows . action))
         | (key, scr)  <- zip "weruio" [2,0,1,2,0,1] -- was [0..] *** change to match your screen order ***
         , (action, mask) <- [ (W.view, "") , (W.shift, "S-")]
    ]
#+END_SRC
** xarand
#+BEGIN_SRC conf :tangle ~/.screenlayout/arandr.sh
#!/bin/sh
xrandr --output DisplayPort-1 --mode 3840x2160 --pos 0x0 --rotate left --output DisplayPort-0 --mode 3840x2160 --pos 6000x0 --rotate left --output DisplayPort-2 --primary --mode 3840x2160 --pos 2160x1520 --rotate normal --output DVI-D-0 --off --output HDMI-A-0 --off
#+END_SRC
** org-protocol
#+BEGIN_SRC conf :tangle ~/.local/share/applications/org-protocol.desktop
[Desktop Entry]
Name=org-protocol
Exec=emacsclient -n %u
Type=Application
Terminal=false
Categories=System;
MimeType=x-scheme-handler/org-protocol;
#+END_SRC
